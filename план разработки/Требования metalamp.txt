github{
    Вся верстка должна быть выложена на github pages

    коммиты писать не реже чем раз в день, делать коммиты когда сделанна хоть какая-нибудь работа

    по проекту, не сваливать большое колличество работы в один комит

    !ВСЕ КОММИТЫ ПИСАТЬ НА АНГЛИЙСКОМ ЯЗЫКЕ
}

верстка{
    * Ориентироваться на последние версии Chrome и Firefox. На Safari и старые
      IE можно не обращать внимания для этих заданий

    * Все отступы и размеры элементов должны быть соблюдены,
      для этого во время работы используйте расширение
    
    * Все шрифты должны быть подключены и сгенерированы в
      форматах .ttf, .woff, .svg, в сервисе Font2Web
    
    * Количество картинок должно быть минимальным: если элемент состоит из текста,
      он должен быть текстовым, если элемент — это просто круг, 
      сделать его чистым css, без картинок
    
    *   Все страницы должны быть по максимуму responsive (здесь примеры чем responsive отличается от adaptive и liquid).
        Можно максимальной ширину сделать 1920, а минимальной 320,
        а между этими значениями подстраиваться под ширину страницы

    *   Не использовать фреймворки для создания раскладки страницы, такие как, например, bootstrap.
        Это, с одной стороны, важно для нашего понимания того, что вы владеете техниками создания
        раскладки страницы, а с другой, будет полезно вам, так как поможет
        углубить ваши знания в html и css, и, также,
        научит решать боевые задачи связанные с созданием раскладки.
    
    * Компонентность. В стандартах будет требоваться использование БЭМ,
      так что предлагаем сразу его использовать. Необходимо настроить Parcel или Webpack и шаблоны,
      чтобы каждый БЭМ-овский блок находился в отдельной папке
      (там будет шаблон самого блока и все его стили, скрипты и картинки.)
    
    * Использовать в макетах препроцессоры по максимуму.
      Вам в любом случае надо будет это сделать для соблюдения
      предыдущего требования про компонентность, импорты и вставки
      компонентов друг в друга вы на сыром HTML не сделаете.
      Подключайте Parcel (или Webpack), он же нужен будет для 4-го задания,
      и через него настройте сборку Pug (замену HTML) и SCSS (замена CSS).
      Конкретно эти технологии просто рекомендации, можете использовать другие препроцессоры,
      главное, чтобы они позволяли вам сделать вкладываемые компоненты с чёткими контрактами.

    * Небольшие расхождения в PerfectPixel допускаются в местах,
      где есть неточности в макете (пример: разная ширина у одинаковых блоков).

    * На страницах UI-Kit responsive не требуется.

    * В этом задании вам нужно сверстать все элементы из макета,
      разбив на компоненты. То есть прямо по макету накидать на
      одной странице все компоненты.
    * Так же такие вещи, как бегунки, календари и дропдауны должны быть сделаны через JS.
      можете подключать какие угодно jQuery-плагины для этого
      (вообще ради этого макет и подбирался, чтобы был опыт экспериментов с подключением jQuery и его плагинов)
}